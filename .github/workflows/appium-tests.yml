name: Run Appium Tests on BrowserStack 

on:
  push:
    branches: [main]

jobs:
  upload-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Upload APK to BrowserStack
        id: upload_apk
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: |
          echo "Uploading APK to BrowserStack..."

          RESPONSE=$(curl -s -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" \
            -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
            -F "file=$(find ./Android/app/build/outputs/apk/ -name '*.apk' | head -n 1)")
            
          echo "Response: $RESPONSE"

          APP_URL=$(echo "$RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin).get('app_url', ''))")

          if [ -z "$APP_URL" ]; then
            echo "❌ Failed to extract app_url from response."
            exit 1
          fi

          echo "✅ Upload successful. APP_URL=$APP_URL"
          echo "APP_URL=$APP_URL" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Appium-Python-Client pytest

      - name: Run Appium Tests on BrowserStack
        env:
          APP_URL: ${{ env.APP_URL }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: |
          echo "Running tests with APP_URL=$APP_URL"
          pytest appium-test-suite/tests/
